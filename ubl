[1mdiff --git a/KerasRefractored.py b/KerasRefractored.py[m
[1mindex 460fc03..740b765 100644[m
[1m--- a/KerasRefractored.py[m
[1m+++ b/KerasRefractored.py[m
[36m@@ -35,21 +35,26 @@[m [mimport seaborn as sns[m
 sns.despine()[m
 [m
 [m
[31m-[m
 file_location = '/home/mike/Documents/coding_all/data_sets_machine_predict/coin_months_data'[m
 #df = pd.read_csv(file_location)[m
 con = sqlite3.connect(file_location)[m
[31m-table = 'second_coin_list_two'[m
[32m+[m[32mtable = 'top_3_jan_mid_aug_final'[m
 df = pd.read_sql_query('SELECT * FROM %s' % (table), con)[m
[32m+[m
[32m+[m
 drop_nan_rows = 'yes'[m
 #columns_to_drop = None[m
 #columns_to_drop = ['amount_USDT_ETH','total_USDT_ETH', 'trade_count_USDT_ETH',[m
 #'min_rate_USDT_ETH', 'max_rate_USDT_ETH', 'rate_USDT_ETH', 'rate_USDT_ETH_change', 'date'][m
[31m-columns_to_drop = ['amount_USDT_ETH','total_USDT_ETH',[m
[32m+[m[32mcolumns_to_drop1 = ['amount_USDT_ETH','total_USDT_ETH',[m
  'amount_USDT_BTC', 'total_USDT_BTC', 'amount_USDT_LTC', 'total_USDT_LTC', 'date',[m
  'trade_count_USDT_LTC', 'max_rate_USDT_LTC','rate_USDT_BTC',[m
  'trade_count_USDT_BTC', 'min_rate_USDT_BTC', 'max_rate_USDT_BTC', 'rate_USDT_LTC',[m
  'min_rate_USDT_LTC', ][m
[32m+[m[32mcolumns_to_drop = ['amount_USDT_ETH','total_USDT_ETH',[m
[32m+[m[32m 'amount_USDT_BTC', 'total_USDT_BTC', 'amount_USDT_LTC', 'total_USDT_LTC', 'date',[m
[32m+[m[32m 'trade_count_USDT_LTC', 'max_rate_USDT_LTC', 'rate_USDT_LTC',[m
[32m+[m[32m 'min_rate_USDT_LTC', ][m
 # columns all before any editing [m
 columns_all_init = ['date'][m
 # took date out of colums_all[m
[36m@@ -136,6 +141,9 @@[m [mresult = sample_instance._set_up_data_for_prob_predict()[m
 df =result.dataframe[m
 print(df.columns.values)[m
 feature_wanted = 'rate_USDT_ETH'[m
[32m+[m[32mdf = df.iloc[20000:,][m
[32m+[m[32mprint(df.columns.values)[m
[32m+[m[32mprint(df.shape)[m
 [m
 #just with ETH vars[m
 #['rate_USDT_ETH' 'trade_count_USDT_ETH' 'min_rate_USDT_ETH'[m
[36m@@ -164,10 +172,10 @@[m [mfor k,v, in feature_vars_dict.items():[m
 print(len(feature_vars_dict))[m
 [m
 # vars[m
[31m-WINDOW = 30[m
[32m+[m[32mWINDOW = 144[m
 EMB_SIZE = len(feature_vars_dict)[m
 STEP = 1[m
[31m-FORECAST = 1 [m
[32m+[m[32mFORECAST = 72[m[41m [m
 features_array = [][m
 normalized_features_dict = {}[m
 X, Y = [], [][m
[36m@@ -194,7 +202,7 @@[m [mfor i in range(0, len(v), STEP):[m
 		y_i = feature_wanted_data[i+WINDOW+FORECAST][m
 		last_close = x_i[-1][m
 		next_close = y_i[m
[31m-		if last_close < next_close:[m
[32m+[m		[32mif (last_close*1.01) < next_close:[m
 			y_i = [1, 0][m
 		else:[m
 			y_i = [0, 1]   [m
[36m@@ -257,6 +265,7 @@[m [mX_train, X_test, Y_train, Y_test = create_Xt_Yt(X, Y, percentage=percentage)[m
 X_train = np.reshape(X_train, (X_train.shape[0], X_train.shape[1], EMB_SIZE))[m
 X_test = np.reshape(X_test, (X_test.shape[0], X_test.shape[1], EMB_SIZE))[m
 [m
[32m+[m[32m# first layer in model[m
 model = Sequential()[m
 model.add(Convolution1D(input_shape = (WINDOW, EMB_SIZE),[m
                         nb_filter=16,[m
[36m@@ -290,7 +299,7 @@[m [mcheckpointer = ModelCheckpoint(filepath="lolkek.hdf5", verbose=1, save_best_only[m
 [m
 [m
 model.compile(optimizer=opt, [m
[31m-              loss='categorical_crossentropy',[m
[32m+[m[32m              loss='binary_crossentropy',[m
               metrics=['accuracy'])[m
 [m
 history = model.fit(X_train, Y_train, [m
[1mdiff --git a/__pycache__/ArrangeData.cpython-36.pyc b/__pycache__/ArrangeData.cpython-36.pyc[m
[1mindex 39d76c3..4ebb423 100644[m
Binary files a/__pycache__/ArrangeData.cpython-36.pyc and b/__pycache__/ArrangeData.cpython-36.pyc differ
[1mdiff --git a/__pycache__/DatabaseFunctionality.cpython-36.pyc b/__pycache__/DatabaseFunctionality.cpython-36.pyc[m
[1mindex 0ee7921..e149e1b 100644[m
Binary files a/__pycache__/DatabaseFunctionality.cpython-36.pyc and b/__pycache__/DatabaseFunctionality.cpython-36.pyc differ
[1mdiff --git a/__pycache__/MachinePredictModelrefractored.cpython-36.pyc b/__pycache__/MachinePredictModelrefractored.cpython-36.pyc[m
[1mindex 03a3b7c..c3b5523 100644[m
Binary files a/__pycache__/MachinePredictModelrefractored.cpython-36.pyc and b/__pycache__/MachinePredictModelrefractored.cpython-36.pyc differ
[1mdiff --git a/__pycache__/RegressionCombined.cpython-36.pyc b/__pycache__/RegressionCombined.cpython-36.pyc[m
[1mindex 8e90cac..374e7b0 100644[m
Binary files a/__pycache__/RegressionCombined.cpython-36.pyc and b/__pycache__/RegressionCombined.cpython-36.pyc differ
[1mdiff --git a/lolkek.hdf5 b/lolkek.hdf5[m
[1mindex 3956969..710d515 100644[m
Binary files a/lolkek.hdf5 and b/lolkek.hdf5 differ
